{"version":3,"sources":["serviceWorker.js","redux/error/errors.action.types.js","redux/error/error.reducers.js","redux/profile/profile.actions.types.js","redux/profile/profile.reducers.js","redux/success/success.action.types.js","redux/success/sucess.reducers.js","redux/users/user.actions.types.js","redux/users/users.reducers.js","redux/root-reducer.js","redux/store.js","redux/error/error.actions.js","redux/users/users.utils.js","Components/enterUsername/enter.username.jsx","Components/friendRequestSent/friendRequestSent.jsx","Components/friends/friendRequest.jsx","Pages/Friend/friends.page.jsx","redux/users/users.actions.js","Components/header/header.component.jsx","redux/profile/profile.actions.js","Components/newTweet/newTweet.jsx","Components/messaging/messaging.component.jsx","Components/my_friends/my_friends.component.jsx","Components/newPassword/newPassword.jsx","Components/updateProfile/update.profile.jsx","Components/updateProfile/updateProfile.components.jsx","Components/profile/profile.static.jsx","Pages/Profile/profile.page.jsx","Components/cardSearch/card.searchResult.jsx","Components/tableSearchResult/table.searchResult.jsx","Components/search/searchResults.jsx","Components/signIn/signIn.component.jsx","Components/signUp/signUp.component.jsx","Components/signInAndSignOut/signInAndSignOut.component.jsx","Components/table/table.jsx","Components/spinner/spinner.jsx","Components/TopTags/toptags.component.jsx","Components/card/card.jsx","Components/yourTweet/YourTweet.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","ACTION_TYPES","ADD_ERRORS","DELETE_ERRORS","INTIAL_STATE","errors","Error_Reducer","state","action","type","payload","UPDATE_SUCCESS","UPDATE_FAILURE","ONLY_IMAGE","ProfileReducer","image","ADD_SUCCESS","DELETE_SUCCESS","success","Success_Reducer","LOGOUT","LOGIN_SUCCESS","LOGIN_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","userReducer","email","user","username","name","token","persistConfig","key","storage","whitelist","rootReducer","combineReducers","profile","persistReducer","middlewares","thunk","store","createStore","applyMiddleware","persistor","persistStore","ERROR_ADDING","ERROR_DELETING","getJWT","getState","getUser","connect","dispatch","e","withRouter","props","useState","setEmail","OnSubmit","a","axios","url","method","data","alert","history","push","response","console","log","Form","className","Group","as","Row","controlId","Label","column","sm","Col","Control","style","width","value","onChange","target","placeholder","onClick","class","FriendRequestSent","friends","setFriendRequestSent","useEffect","headers","newFunc","length","cancelSentRequest","scope","map","index","Image","roundedCircle","height","src","Button","display","marginLeft","variant","FriendRequestReceived","setFriendRequestReceived","cancelReceivedRequest","status","message","acceptReceivedRequest","textAlign","Alert","LoginSuccess","LoginFailure","Logout","socket","io","error","people","setPeople","search","setSearch","on","people_count","handleSeached","get","posted","users","pathname","Navbar","bg","Brand","to","color","Nav","inline","Link","toUpperCase","href","marginRight","FormControl","event","UpdateSuccess","asyncGet","res","isMe","btoa","String","fromCharCode","Uint8Array","temporaryImage","HomepageComponent","onSubmit","preventDefault","persist","tweet","caption","fileToUpload","FormData","append","trim","post","setState","disabled","document","getElementById","fileChangedHandler","file","files","handleChange","this","ASYNC_GET","currentUser","verticalAlign","marginTop","fontWeight","fontSize","innerWidth","margintop","id","React","Component","messages","setMessages","concat","author","split","newmessages","messaging","emit","_id","handleClick","input","newmessage","setInput","idx","InputGroup","aria-label","aria-describedby","Append","MyFriends","setFriends","Table","striped","bordered","hover","friend","password","setPassword","confirmPassword","setConfirmPassword","innerHeight","SingleProfileComponent","privateState","private","UPDATE_DATA","JSON","stringify","asyncUpdate","newPrivate","setPrivate","fullname","setFullname","address","setAddress","mobile","setMobile","age","setAge","onsubmit","changeStatus","isFriend","setFriendStatus","isfriend","onSendRequest","Object","keys","elem","includes","toLowerCase","for","rows","charAt","slice","filter","Profile","GET_DATA","imageURL","aboutMe","static","prevProps","Container","margin","xs","md","GET_IMAGE","SearchResultCard","Card","Img","Body","Title","Text","setUsers","tabularForm","setTabular","SignIn","handleSubmit","LOGIN","handleOnclick","asyncLogIn","SignUp","SIGN_UP","Check","label","asyncSignUp","SignInAndSignOut","OneTable","array","hashtag","frequency","SpinnerValue","Spinner","animation","role","TopTags","handleDataChange","top","getData","hashtags","loaded","size","aria-hidden","title","SingleCard","text","marginBottom","givenArrayString","arrayOfStrings","len","i","getHashtagsFromString","YourTweet","trymakeRequest","num","tweets","makeRequest","addEventListener","onClose","dismissible","exact","path","render","component","differentProps","EnterUsername","NewPassword","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a6303706.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ACTION_TYPES={\n    ADD_ERRORS:'ADD_ERRORS',\n    DELETE_ERRORS:'DELETE_ERRORS'\n}\nexport default ACTION_TYPES","import ACTION_TYPES from './errors.action.types'\n\nconst INTIAL_STATE={\n    errors:[]\n}\nconst Error_Reducer = (state=INTIAL_STATE,action)=>{\n    switch(action.type){\n        case(ACTION_TYPES.ADD_ERRORS): return ({...action.payload})\n        case(ACTION_TYPES.DELETE_ERRORS):\n            return (null)\n        default:\n            return state\n    }\n}\nexport default Error_Reducer","const ACTION_TYPES={\n    UPDATE_SUCCESS:\"UPDATE_SUCCESS\",\n    UPDATE_FAILURE:\"FAILURE\",\n    ONLY_IMAGE:\"IMAGE_ONLY\"\n}\nexport default ACTION_TYPES","import ACTION_TYPES from \"./profile.actions.types\"\n\nconst INITIAL_STATE=null\nconst ProfileReducer = (state=INITIAL_STATE,action)=>{\n    switch(action.type)\n    {\n        case(ACTION_TYPES.UPDATE_SUCCESS):\n            return {...state,...action.payload}\n        case(ACTION_TYPES.UPDATE_FAILURE):\n            return null\n        case(ACTION_TYPES.ONLY_IMAGE):\n            return {image:state.image}\n        default:\n            return state\n    }\n}\nexport default ProfileReducer","const ACTION_TYPES={\n    ADD_SUCCESS:'ADD_SUCCESS',\n    DELETE_SUCCESS:'DELETE_SUCCESS'\n}\nexport default ACTION_TYPES","import ACTION_TYPES from './success.action.types'\n\nconst INTIAL_STATE={\n    success:[]\n}\nconst Success_Reducer = (state=INTIAL_STATE,action)=>{\n    switch(action.type){\n        case(ACTION_TYPES.ADD_SUCCESS):\n            return ({...action.payload})\n        case(ACTION_TYPES.DELETE_SUCCESS):\n            return (null)\n        default:\n            return state\n    }\n}\nexport default Success_Reducer","const ACTION_TYPES={\n    LOGOUT:\"LOGOUT\",\n    LOGIN_SUCCESS:\"SUCCESS_LOGIN\",\n    LOGIN_FAILURE:\"FAILURE\",\n    SIGN_UP_SUCCESS:\"SIGN_UP_SUCCESS\",\n    SIGN_UP_FAILURE:\"SIGN_UP_FAILURE\"\n}\nexport default ACTION_TYPES","import ACTION_TYPES from \"./user.actions.types\"\n\nconst INITIAL_STATE=null\nconst userReducer = (state=INITIAL_STATE,action)=>{\n    switch(action.type)\n    {\n        case(ACTION_TYPES.LOGIN_SUCCESS):\n            return {email:action.payload.user.email,username:action.payload.user.name,token:action.payload.token}\n        case(ACTION_TYPES.LOGIN_FAILURE):\n            return null\n        case(ACTION_TYPES.LOGOUT):\n            return null\n        default:\n            return state\n    }\n}\nexport default userReducer","import Error_Reducer from './error/error.reducers';\nimport ProfileReducer from './profile/profile.reducers';\nimport Success_Reducer from './success/sucess.reducers';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './users/users.reducers';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['user','profile']\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  errors:Error_Reducer,\n  profile:ProfileReducer,\n  success:Success_Reducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from './root-reducer';\nconst middlewares = [thunk];\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistStore };","import ACTION_TYPES from \"./errors.action.types\";\n\nexport const ERROR_ADDING=(errors)=>({\ntype:ACTION_TYPES.ADD_ERRORS,\npayload:errors\n})\nexport const ERROR_DELETING=()=>({\ntype:ACTION_TYPES.DELETE_ERRORS\n})","import { store } from \"../store\";\n\nexport function getJWT() {\n    const state = store.getState();\n    const authToken = state.user.token\n    return authToken\n}\nexport function getUser() {\n    const state = store.getState();\n    return state.user\n}\n","import {Button, Col, Form, Row} from 'react-bootstrap'\r\nimport { ERROR_ADDING, ERROR_DELETING } from '../../redux/error/error.actions'\r\nimport React,{useState} from 'react'\r\nimport { getJWT, getUser } from '../../redux/users/users.utils'\r\n\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst EnterUsername =(props)=>{\r\n    const [email,setEmail] = useState(getUser()?.email?getUser().email:'')\r\n    const OnSubmit =async()=>{\r\n        await props.ERROR_DELETING()\r\n   try{ let res=await axios({url:`https://tweetit-react.herokuapp.com//password/reset`,method:'POST',data:{email}}) \r\n   alert('An Email has been sent to the provided email address ! ')\r\n        props.history.push('/') }\r\n    catch(e){\r\n        if(e.response)\r\n        {\r\n            props.ERROR_ADDING(e.response.data)\r\n        }\r\n        console.log(e)\r\n    }\r\n    }\r\n    return(<Form className=\"container\" >\r\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                    <Form.Label column sm=\"2\">\r\n                        Enter the Email :\r\n                    </Form.Label>\r\n                    <Col sm=\"10\">\r\n                        <Form.Control style={{width:'300px'}} value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Email\" />\r\n                    </Col>  \r\n                 </Form.Group>\r\n                 <button type=\"button\" onClick={OnSubmit} class=\"btn btn-outline-success\">\r\n                    Submit\r\n                </button>\r\n            </Form>\r\n      )\r\n}\r\nconst mapDispatchToProps=(dispatch)=>({\r\n    ERROR_ADDING:(e)=>dispatch(ERROR_ADDING(e)),\r\n    ERROR_DELETING:()=>dispatch(ERROR_DELETING())\r\n})\r\nexport default connect(null,mapDispatchToProps)(withRouter(EnterUsername))","import {Button, Image} from 'react-bootstrap'\r\nimport React,{useEffect, useState} from 'react'\r\n\r\nimport axios from 'axios'\r\nimport {getJWT} from '../../redux/users/users.utils'\r\n\r\nconst FriendRequestSent=()=>{\r\n    const [friends,setFriendRequestSent] = useState([])\r\n    useEffect(() => {\r\n        async  function newFunc(){\r\n            let friends = await  axios({url:'https://tweetit-react.herokuapp.com//friends/sent',method:'GET',headers:{'Authorization':'Bearer '+getJWT()}})\r\n            await setFriendRequestSent(friends.data)\r\n           }\r\n           newFunc()\r\n    },[friends.length])\r\n    const cancelSentRequest=async(props)=>{\r\n        try{\r\n            await  axios({url:'https://tweetit-react.herokuapp.com//friends/request/sent/'+props.name,method:'DELETE',headers:{'Authorization':'Bearer '+getJWT()}})\r\n            let friends = await  axios({url:'https://tweetit-react.herokuapp.com//friends/sent',method:'GET',headers:{'Authorization':'Bearer '+getJWT()}})\r\n            await setFriendRequestSent(friends.data)\r\n        }        catch(e){\r\n            console.log(e.response)\r\n        }\r\n    }\r\n    return(<table class=\"table table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">User</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Actions</th>\r\n        </tr>\r\n        {friends.map((user,index)=>{\r\n            return(<tr key={index}>\r\n                <td>{index+1}</td>\r\n                <td><Image roundedCircle style={{width:'50px',height:'50px'}} src={user.image?`data:image/jpeg;base64,${user.image}`:\"https://www.flaticon.com/svg/static/icons/svg/848/848006.svg\"}/></td>\r\n                <td>{user.profile.email}</td>\r\n                <td>{user.name}</td>\r\n                <td><Button onClick={()=>cancelSentRequest(user)} style={{display:'inline',marginLeft:'50px'}} variant=\"outline-danger\" type=\"submit\">\r\n                Cancel Request ?\r\n              </Button></td>\r\n            </tr>)\r\n        })}\r\n    </thead>\r\n    <tbody>\r\n\r\n    </tbody>\r\n    </table>)\r\n}\r\nexport default FriendRequestSent","import {Button, Image} from 'react-bootstrap'\r\nimport React,{useEffect, useState} from 'react'\r\n\r\nimport axios from 'axios'\r\nimport {getJWT} from '../../redux/users/users.utils'\r\n\r\nconst FriendRequestReceived=()=>{\r\n    const [friends,setFriendRequestReceived] = useState([])\r\n    async  function newFunc(){\r\n        let friends = await  axios({url:'https://tweetit-react.herokuapp.com//friends/received',method:'GET',headers:{'Authorization':'Bearer '+getJWT()}})\r\n        await setFriendRequestReceived(friends.data)\r\n       }\r\n    useEffect(() => { newFunc() },[])\r\n    const cancelReceivedRequest=async (name)=>{\r\n        try{\r\n            let friends =await axios({url:'https://tweetit-react.herokuapp.com//friends/request/recieved/'+name,method:'DELETE',headers:{'Authorization':'Bearer '+getJWT()}})\r\n            if(friends.status==200)\r\n            {\r\n                newFunc()\r\n            }\r\n        }\r\n        catch(e){\r\n            console.log(e.message)\r\n        }   \r\n    }\r\n    const acceptReceivedRequest =async(name)=>{\r\n       try{\r\n            let friends =await axios({url:'https://tweetit-react.herokuapp.com//friends/request/recieved/'+name,method:'POST',headers:{'Authorization':'Bearer '+getJWT()}})\r\n            if(friends.status==200)\r\n            {\r\n                newFunc()\r\n            }\r\n        }\r\n        catch(e){\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    return(<table class=\"table table-hover\" >\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">User</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Actions</th>\r\n        </tr>\r\n        {friends.map((user,index)=>{\r\n            return(<tr key={index} style={{textAlign:'center'}}>\r\n                <td>{index+1}</td>\r\n                <td><Image roundedCircle style={{width:'50px',height:'50px'}} src={user.image?`data:image/jpeg;base64,${user.image}`:\"https://www.flaticon.com/svg/static/icons/svg/848/848006.svg\"}/></td>\r\n                <td>{user.email}</td>\r\n                <td>{user.name}</td>\r\n                <td><Button onClick={()=>acceptReceivedRequest(user.name)} style={{display:'inline',marginLeft:'50px'}} variant=\"outline-success\" type=\"submit\">\r\n                Accept Request \r\n              </Button><Button onClick={()=>cancelReceivedRequest(user.name)} style={{display:'inline',marginLeft:'50px'}} variant=\"outline-danger\" type=\"submit\">\r\n                Cancel Request ?\r\n              </Button>\r\n              </td>\r\n                \r\n            </tr>)\r\n        })}\r\n    </thead>\r\n    <tbody>\r\n       \r\n    </tbody>\r\n    </table>)\r\n}\r\nexport default FriendRequestReceived","import {Alert, Button, Image} from 'react-bootstrap'\r\nimport {Link, Redirect, Route, Switch, withRouter} from 'react-router-dom'\r\nimport React,{useEffect, useState} from 'react'\r\n\r\nimport FriendRequestReceived from '../../Components/friends/friendRequest'\r\nimport FriendRequestSent from '../../Components/friendRequestSent/friendRequestSent'\r\nimport axios from 'axios'\r\n\r\nconst FriendsPage=(props)=>{\r\n        const [friends,setFriends] = useState([])\r\n        useEffect(()=>{\r\n         async function newFunc(){\r\n          }\r\n          newFunc()\r\n        })\r\n    return(<div>\r\n            <div className=\"container\" style={{textAlign:'center'}}>\r\n            <Alert key='1' variant='warning'>\r\n                Request SENT :\r\n                </Alert>\r\n                  <FriendRequestSent/>\r\n                <Alert key='2' variant='success'>\r\n                Request RECEIVED :\r\n                </Alert>\r\n                   <FriendRequestReceived/>  \r\n            </div>\r\n        </div>)\r\n}\r\nexport default withRouter(FriendsPage)","import {ERROR_ADDING, ERROR_DELETING} from '../error/error.actions'\n\nimport ACTION_TYPES from \"./user.actions.types\";\nimport axios from \"axios\";\nimport { getJWT } from \"./users.utils\";\n\nexport const Login =()=>({\n    type:ACTION_TYPES.LOGIN\n})\nexport const LoginSuccess=(user)=>({\n    type:ACTION_TYPES.LOGIN_SUCCESS,\n    payload:user\n})\nexport const LoginFailure=()=>({\n    type:ACTION_TYPES.LOGIN_FAILURE\n})\nexport const Logout =()=>({\n    type:ACTION_TYPES.LOGOUT\n})\nexport const asyncLogIn = (user) => {\n    return async (dispatch) => {\n        const{email,password}=user\n    try{\n        const res=await axios.post('https://tweetit-react.herokuapp.com//login', {email,password})\n        if(res.status===200)\n        {        \n           await dispatch(ERROR_DELETING())\n           await dispatch(LoginSuccess(res.data))\n        }\n        else{\n            \n            dispatch(LoginFailure());\n        }\n    }\n    catch(e)\n    {\n       if(e.response){\n        dispatch(ERROR_ADDING(e.response.data))\n       }\n       dispatch(LoginFailure())\n    }\n    };\n  };\n  export const asyncLogOut = () => {\n    return async (dispatch) => {\n    try{        \n        const res =await axios({method: 'post', url: 'https://tweetit-react.herokuapp.com//logout',headers:{'Authorization':`Bearer ${getJWT()}`}});\n        if(res.status===200)\n        {            \n            dispatch(Logout())\n        }\n        else{\n            dispatch(Logout());\n        }\n    }\n    catch(e)\n    {\n        // dispatch(ERROR_ADDING(e.response.data))\n    }\n    };\n  };\n  export const asyncSignUp= (user) => {\n    return async (dispatch) => \n    {\n        try{\n            const res=await axios.post('https://tweetit-react.herokuapp.com//signup', {...user})\n            if(res.status===200)\n            {         \n                await dispatch(ERROR_DELETING())\n                await dispatch(LoginSuccess(res.data))\n            }\n            else{     \n                dispatch(Logout());\n            }\n        }\n        catch(e)\n        {\n            if(e.response)\n            {\n                dispatch(ERROR_ADDING(e.response.data))\n            }\n            else{\n                console.log(e.message)\n            }\n        }\n    };\n  };","import { Button, FormControl, Image } from 'react-bootstrap'\nimport {Link, withRouter} from 'react-router-dom'\n\nimport { ERROR_ADDING } from '../../redux/error/error.actions'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport React from 'react'\nimport { asyncLogOut } from '../../redux/users/users.actions'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { getJWT } from '../../redux/users/users.utils'\nimport io from 'socket.io-client';\nimport { useState } from 'react'\n\nconst socket = io('https://tweetit-react.herokuapp.com/');\n\nconst Header=(props)=>{\n  const [people,setPeople]=useState(0)\n  const [search,setSearch]=useState('')\n  socket.on('NEW_USER',(people_count)=>{\n    setPeople(people_count)\n  })\n  const handleSeached=async(name)=>{\n    const posted=await axios.get(`https://tweetit-react.herokuapp.com//username/${name}`,{ headers:{'Authorization':`Bearer ${getJWT()}`,\"Content-Type\": \"multipart/form-data\"}})\n    if(posted.status==200)\n    {\n      if(posted.data.users.length>0)\n      {\n        props.history.push({pathname:`/search/${name}`,state:{users:posted.data.users}})\n      }\n      else{\n        props.ERROR_ADDING({errors:[{error:'No user with related username !'}]})\n      }\n    }\n  }\n  return (\n        <Navbar className=\"navbar-fixed-top\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand>\n                <img\n                    src=\"https://i.ibb.co/6vjCjWK/OnlyLoGO.png\"\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                /> <Link to=\"/\" style={{color:\"white\"}}>TWEETIT</Link></Navbar.Brand>\n            <Nav className=\"mr-auto\">\n            <Nav style={{color:'#C0C0C0'}}>Online : {people} </Nav>\n            \n            </Nav>\n          \n            <Form inline>\n                 <Nav.Link><Link to=\"/toptags\">{\"Top Tags\".toUpperCase()}</Link></Nav.Link>\n               {props.user?<Nav.Link href=\"\"><Link to=\"/friend\">{\"Requests\".toUpperCase()}</Link></Nav.Link>:null}\n               {props.user?<Nav.Link href=\"\"><Link to=\"/friends/all\">{\"Friends\".toUpperCase()}</Link></Nav.Link>:null}\n               {props.user?null:<Nav.Link href=\"\"><Link to=\"/login\">{\"login\".toUpperCase()}</Link></Nav.Link>}\n               {props.user?<Nav.Link href=\"#\"><Link to={`/${props.user.username}/all`}>{\"your tweets\".toUpperCase()}</Link></Nav.Link>:null}\n               {props.user?<Nav.Link href=\"#\">\n               <Link to={`/profile/${props.user.username}`}>\n                <Image\n                roundedCircle\n                    src={props.profile?props.profile.image?`data:image/jpeg;base64,${props.profile.image}`:\"https://www.flaticon.com/svg/static/icons/svg/848/848006.svg\":\"https://www.flaticon.com/svg/static/icons/svg/848/848006.svg\"}\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                    style={{marginRight:'10px'}}\n                /> </Link></Nav.Link>:null}\n               {props.user? <Form inline>       \n              <FormControl type=\"text\" value={search} onChange={(event)=>setSearch(event.target.value)} placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button onClick={()=>handleSeached(search)} variant=\"outline-info\">Search</Button>\n              {props.user?<Nav.Link href=\"#\" onClick={()=>props.LOGOUT()}>{\"Signout\".toUpperCase()}</Nav.Link>:null}\n            \n            </Form>:null}\n            </Form>\n        </Navbar>)\n}\nconst mapStateToProps=(state)=>({\n  user:state.user,\n  profile:state.profile\n    })\nconst dispatchStateToProps=dispatch=>({\nLOGOUT:()=>dispatch(asyncLogOut()),\nERROR_ADDING:(error)=>dispatch(ERROR_ADDING(error))\n})\n export default withRouter(connect(mapStateToProps,dispatchStateToProps)(Header))","import {ERROR_ADDING, ERROR_DELETING} from '../error/error.actions'\nimport { getJWT, getUser } from \"../users/users.utils\";\n\nimport ACTION_TYPES from \"./profile.actions.types\";\nimport axios from \"axios\";\n\nexport const UpdateSuccess=(user)=>({\n    type:ACTION_TYPES.UPDATE_SUCCESS,\n    payload:user\n})\nexport const UpdateWithImage=()=>({\n    type:ACTION_TYPES.ONLY_IMAGE\n})\nexport const UpdateFailure=()=>({\n    type:ACTION_TYPES.UPDATE_FAILURE\n})\nexport const asyncUpdate = (data) => {\n    return async (dispatch) => {\n    try{\n        const res =await axios({method: 'post', url: `https://tweetit-react.herokuapp.com//profile`,headers:{'Authorization':`Bearer ${getJWT()}`},data});\n        if(res.status===200)\n        {        \n           await dispatch(ERROR_DELETING())\n           await dispatch(UpdateSuccess(res.data.user))\n           await dispatch(UpdateSuccess({isMe:res.data.isMe}))\n          let image =  btoa(String.fromCharCode(...new Uint8Array(res.data.image.data)))\n           await dispatch(UpdateSuccess({image}))\n           await dispatch(UpdateSuccess({temporaryImage:''}))\n        }\n        else{\n           console.log('error')\n        }\n    }\n    catch(e)\n        {\n            console.log(JSON.stringify(e))\n                // dispatch(ERROR_ADDING(e.message))\n        }\n    };\n  };\nexport const asyncGet = (name) => {\n    return async (dispatch) => {\n    try{\n        let res\n       if(name==getUser().username)\n            {\n                 res =await axios({method: 'get', url: `https://tweetit-react.herokuapp.com//profile`,headers:{'Authorization':`Bearer ${getJWT()}`}});\n                 \n                }\n            else{\n                await dispatch(UpdateWithImage())\n                res =await axios({method: 'get', url: `https://tweetit-react.herokuapp.com//profile/${name}`,headers:{'Authorization':`Bearer ${getJWT()}`}});\n              }\n        if(res.status===200)\n        {        \n           await dispatch(ERROR_DELETING())\n           await dispatch(UpdateSuccess(res.data.user))\n           await dispatch(UpdateSuccess({isMe:res.data.isMe}))\n          if((res.data.image && name==getUser().username)){\n          let image =  btoa(String.fromCharCode(...new Uint8Array(res.data.image.data)))\n           await dispatch(UpdateSuccess({image}))\n           await dispatch(UpdateSuccess({temporaryImage:''}))\n          }\n          else if(res.data.image){\n            let image =  btoa(String.fromCharCode(...new Uint8Array(res.data.image.data)))\n            await dispatch(UpdateSuccess({temporaryImage:image}))\n          }\n         else if((!res.data.image && name==getUser().username)){\n            await dispatch(UpdateSuccess({image:''}))\n            await dispatch(UpdateSuccess({temporaryImage:''}))\n          }\n        //    await dispatch(LoginSuccess(res.data))\n        }\n        else{\n        }\n    }\n    catch(e)\n    {\n           if(e.response)\n           {\n            dispatch(ERROR_ADDING(e.response.data))\n           }\n           else{\n            dispatch(ERROR_ADDING({errors:[{error:'something went wrong!'}]}))\n           }\n    }\n    };\n  };\nexport const GET_IMAGE = () => {\n    return async (dispatch) => {\n    try{\n        let res\n        res =await axios({method: 'get', url: `https://tweetit-react.herokuapp.com//profile/`,headers:{'Authorization':`Bearer ${getJWT()}`}});\n        if(res.status===200)\n        {    \n          if(res.data.image){\n          let image =  btoa(String.fromCharCode(...new Uint8Array(res.data.image.data)))\n           await dispatch(UpdateSuccess({image}))\n          }\n        //    await dispatch(LoginSuccess(res.data))\n        }\n        else{\n        }\n    }\n    catch(e)\n    {\n           if(e.response)\n           {\n            dispatch(ERROR_ADDING(e.response.data))\n           }\n           else{\n            dispatch(ERROR_ADDING({errors:[{error:'something went wrong!'}]}))\n           }\n    }\n    };\n  };","import Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport React from 'react'\r\nimport { asyncGet } from '../../redux/profile/profile.actions'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { getJWT } from '../../redux/users/users.utils'\r\n\r\nclass HomepageComponent extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            tweet:'',\r\n            caption:'',\r\n            fileToUpload:null,\r\n            disabled:false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n            this.props.ASYNC_GET(this.props.currentUser.username)\r\n    }\r\n    onSubmit=async (event)=>{\r\n        try{\r\n            event.preventDefault()\r\n        event.persist()\r\n        const {tweet,caption,fileToUpload}=this.state\r\n        const data = new FormData()\r\n        data.append('username',this.props.user.username)\r\n          data.append('image', fileToUpload)\r\n          data.append('tweet',tweet.trim())\r\n          data.append('caption',caption.trim())\r\n          const posted=await axios.post(\"https://tweetit-react.herokuapp.com//tweet\", data,{ headers:{'Authorization':`Bearer ${getJWT()}`,\"Content-Type\": \"multipart/form-data\"}})\r\n          \r\n          await this.setState({disabled:false})\r\n          if(posted.status==200)\r\n           {\r\n              await this.setState({tweet:'',caption:'',fileToUpload:null})\r\n              await this.setState({disabled:false})\r\n           }\r\n           else{\r\n               console.log(\"ERROR\")\r\n               alert('Something went wrong !')\r\n               await this.setState({disabled:false})\r\n           }\r\n           document.getElementById('input').value=''\r\n        }\r\n        catch(e){\r\n            console.log(e.response)\r\n        }\r\n        }\r\n    fileChangedHandler =(event) => {\r\n        event.persist()\r\n        const file= event.target.files[0]\r\n         this.setState({fileToUpload:file})\r\n        }  \r\n    handleChange=async(event)=>{\r\n        event.persist()\r\n        const {name,value}=event.target\r\n        if(name=='caption' && value.length>150)\r\n        {\r\n            return\r\n        }\r\n        await this.setState({[name]:value})\r\n    }\r\n    render(){\r\n        return(\r\n            <div >\r\n                \r\n            <div style={{verticalAlign:'center',textAlign:'center',marginTop:'10%',fontWeight:'bolder',fontSize:window.innerWidth>600?window.innerWidth/15:window.innerWidth/10}}><img\r\n                    src=\"https://i.ibb.co/6vjCjWK/OnlyLoGO.png\"\r\n                    width={window.innerWidth>600?window.innerWidth/15:window.innerWidth/10}\r\n                    height={window.innerWidth>600?window.innerWidth/15:window.innerWidth/10}\r\n                    className=\"d-inline-block align-top\"\r\n                /> TWEETIT</div>\r\n            <Form style={{ marginLeft:'auto',marginRight:'auto', verticalAlign:'center',textAlign:'center',margintop:\"10%\",fontWeight:'bolder', width:window.innerWidth>600?window.innerWidth/3:\"100%\"}}>\r\n              <Form.Group controlId=\"formGroupPassword\">\r\n                  <Form.Control value={this.state.tweet}  onChange={this.handleChange}  name=\"tweet\" type=\"text\" placeholder=\"Tweet\" style={{marginTop:'10px',marginLeft:'auto',marginRight:'auto'}} />\r\n                  <Form.Control value={this.state.caption}  onChange={this.handleChange} name=\"caption\" type=\"text\" placeholder=\"Caption\" style={{marginTop:'10px',marginLeft:'auto',marginRight:'auto'}} />\r\n                  <input id=\"input\" type='file' onChange={this.fileChangedHandler} />\r\n              <Button disabled={this.state.disabled} onClick={this.onSubmit} style={{marginTop:'10px'}}>TWEETIT</Button>\r\n              </Form.Group>\r\n            </Form>\r\n            </div>)\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>({\r\n    user:state.user,\r\n    currentUser: state.user,\r\n})\r\nconst mapDispatchToProps =(dispatch)=>({\r\n    ASYNC_GET:(name)=>dispatch(asyncGet(name))\r\n  })\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HomepageComponent)","import {Alert, Button, FormControl, InputGroup} from 'react-bootstrap'\r\nimport {useEffect, useState} from 'react'\r\n\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport {getJWT} from '../../redux/users/users.utils'\r\nimport {getUser} from '../../redux/users/users.utils'\r\nimport io from 'socket.io-client';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst socket = io('https://tweetit-react.herokuapp.com/');\r\n\r\nconst Messaging=(props)=>{\r\n    const [messages,setMessages] =useState([])\r\n    socket.on('new_message',({message,email})=>{\r\n        setMessages(messages.concat({message,author:email}))\r\n    })\r\n    useEffect(() => {\r\n        async function newFunc(){\r\n            const newmessages= await axios({url:`https://tweetit-react.herokuapp.com//messages/${props.location.pathname.split('/')[2]}`,method:'GET',headers:{'Authorization':'Bearer '+getJWT()}})\r\n            if((newmessages.data.message[0]))\r\n            {\r\n                setMessages(newmessages.data.message[0].messaging)\r\n                socket.emit('join',newmessages.data.message[0]._id)\r\n            }\r\n        }\r\n        newFunc()\r\n    },[])\r\nconst handleClick =async()=>{\r\n    if(input=='')\r\n    {\r\n        return\r\n    }\r\n    const newmessage= await axios({url:`https://tweetit-react.herokuapp.com//messages/${props.location.pathname.split('/')[2]}`,method:'POST',data:{message:input},headers:{'Authorization':'Bearer '+getJWT()}})\r\n    socket.emit('new_message',{id:newmessage.data.message._id,message:input,email:getUser().email})\r\n    setInput('')\r\n}\r\n    const [input,setInput]=useState('')\r\n    return(<div className=\"container\">\r\n            <h1 style={{textAlign:'center'}}>{props.location.pathname.split('/')[2]}</h1>\r\n        {messages.map((message,idx) => <div>\r\n               <div scope=\"row\" style={message.author==getUser().username?{textAlign:'right'}:{textAlign:'left'}}> <Alert key={idx} variant={message.author==getUser().username?'primary':'secondary'}>\r\n    {message.message}\r\n  </Alert></div>\r\n               </div>)}\r\n        <InputGroup className=\"mb-3\">\r\n     <FormControl\r\n            placeholder=\"Enter message\"\r\n            aria-label=\"Enter message\"\r\n            aria-describedby=\"basic-addon2\"\r\n            value={input}\r\n            onChange={(e)=>setInput(e.target.value)}\r\n            />\r\n            <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\"  onClick={handleClick}  >Send </Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n    </div>)\r\n}\r\nexport default withRouter(Messaging)\r\n","import {Button, Image, Table} from 'react-bootstrap'\r\nimport React, { Component, useEffect, useState } from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {getJWT} from '../../redux/users/users.utils'\r\n\r\nconst MyFriends=()=>{\r\n    const [friends,setFriends] = useState([])\r\n    useEffect(() => {\r\n        let newFunc =async()=>{\r\n            let friends=  await axios({url:'https://tweetit-react.herokuapp.com//friends/all',method:'GET',headers:{'Authorization':'Bearer '+getJWT()}})\r\n            await setFriends(friends.data)\r\n            }\r\n        newFunc()\r\n    },[])\r\n    return(<div>\r\n        <Table striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Message</th>\r\n            </tr>\r\n        </thead>\r\n    <tbody>\r\n        {friends.map((friend,index) =>{\r\n                                    return(<tr key={index}>\r\n                                        <td>{index+1}</td>\r\n                                        <td><Image roundedCircle style={{width:'50px',height:'50px'}} src={friend.image?`data:image/jpeg;base64,${friend.image}`:\"https://www.flaticon.com/svg/static/icons/svg/848/848006.svg\"}/> {friend.name}</td>\r\n                                        <td>{friend.email}</td>\r\n                                        <td><Button variant=\"outline-info\"><Link to={`/message/${friend.name}`}>Message</Link></Button></td>\r\n                                        </tr>)})\r\n                                }\r\n    </tbody>\r\n    </Table>\r\n    </div>)\r\n}\r\nexport default MyFriends","import {Col, Form, Row} from 'react-bootstrap'\r\nimport {ERROR_ADDING, ERROR_DELETING} from '../../redux/error/error.actions'\r\n\r\nimport {Button} from 'react-bootstrap'\r\nimport InputSingle from '../input/inputGroup'\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport {useState} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst NewPassword=(props)=>{\r\n    const [password,setPassword]= useState('')\r\n    const [confirmPassword,setConfirmPassword]= useState('')\r\n    const OnSubmit=async()=>{\r\n       await props.ERROR_DELETING()\r\n      try{\r\n        const res= await axios({url:`https://tweetit-react.herokuapp.com//password/reset/${props.location.pathname.split('/')[3]}`,method: 'POST',data:{password,confirmPassword}},)\r\n       if(res.status==200){\r\n           alert('Your Password has been successfully chaanged !')\r\n           props.history.push('/')\r\n       }\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n       if(e.response)\r\n       {\r\n           props.ERROR_ADDING(e.response.data)\r\n       }\r\n      }\r\n    }\r\n    return(<div className=\"container\" style={{marginTop:window.innerHeight/3,width:window.innerWidth/2}}>\r\n           {/* name=\"Password\" type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} */}\r\n           <Form>\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                <Form.Label column sm=\"2\">\r\n                Password\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                <Form.Control value={password} onChange={(e)=>setPassword(e.target.value)} type=\"password\" placeholder=\"Confirm Password\" />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                <Form.Label column sm=\"2\">\r\n                Confirm Password\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                <Form.Control value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)} type=\"password\" placeholder=\"Confirm Password\" />\r\n                </Col>\r\n            </Form.Group>\r\n            <Button variant=\"outline-secondary\" onClick={OnSubmit}>Secondary</Button>\r\n            </Form>\r\n        </div>)\r\n    }\r\n    const mapDispatchToProps =dispatch =>({\r\n        ERROR_ADDING:(e)=>dispatch(ERROR_ADDING(e)),\r\n        ERROR_DELETING:()=>dispatch(ERROR_DELETING())    \r\n    })\r\nexport default connect(null, mapDispatchToProps)(withRouter(NewPassword))","import React from 'react'\r\nconst SingleProfileComponent=(props)=>{\r\n    return(<div class=\"form-group row\">\r\n    <label  class=\"col-sm-2 col-form-label\">{props.name}</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" value={props.value} onChange={props.onChange} class=\"form-control\" id=\"inputPassword\"  placeholder={`Enter ${props.name}`}/>\r\n    </div>\r\n  </div>)\r\n}\r\nexport default SingleProfileComponent","import React, { useState } from 'react'\r\n\r\nimport { Button } from 'react-bootstrap'\r\nimport SingleProfileComponent from './update.profile'\r\nimport { asyncUpdate } from '../../redux/profile/profile.actions'\r\nimport { connect } from 'react-redux'\r\nimport { useEffect } from 'react'\r\n\r\nconst ProfileComponents=(props)=>{\r\n    const [newPrivate,setPrivate]=useState(props.privateState)\r\n    const [fullname,setFullname]=useState(props.fullname)\r\n    const [address,setAddress]=useState(props.address)\r\n    const [mobile,setMobile]=useState(props.mobile)\r\n    const [age,setAge]=useState(props.age)\r\n    const onsubmit=async()=>{\r\n     const posted = await props.UPDATE_DATA({fullname,address,mobile,age}) \r\n    }\r\n    const changeStatus=async()=>{\r\n         await props.UPDATE_DATA({private:!newPrivate});\r\n         await setPrivate(!newPrivate)\r\n    }\r\n    useEffect(()=>{},[props.private,props.privateState])\r\n\r\n    return(<div>   \r\n        <form> \r\n            <SingleProfileComponent name={'Fullname'} value={fullname} onChange={(e)=>setFullname(e.target.value)}/>\r\n            <SingleProfileComponent name={'Age'} value={age} onChange={(e)=>setAge(e.target.value)}/>\r\n            <SingleProfileComponent name={'Mobile'} value={mobile} onChange={(e)=>setMobile(e.target.value)}/>\r\n            <SingleProfileComponent name={'Address'} value={address} onChange={(e)=>setAddress(e.target.value)}/>\r\n            <div className=\"custom-control custom-switch\" style={{marginLeft:'auto'}}>\r\n                <button type=\"button\" onClick={onsubmit} class=\"btn btn-outline-success\">Update</button>\r\n                <button style={{marginLeft:'15px'}} type=\"button\" onClick={changeStatus} class={`btn btn-outline-${newPrivate?`danger`:`success`}`}>{newPrivate?'Make account Public':`Make account Private`}</button>\r\n            </div>\r\n        </form>\r\n    </div>)\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    privateState:state.profile.private\r\n})\r\nconst mapDispatchToProps=(dispatch)=>({\r\n    UPDATE_DATA:(data)=>dispatch(asyncUpdate(data))\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ProfileComponents)","import {useEffect, useState} from 'react'\r\n\r\nimport {Button} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport {getJWT} from '../../redux/users/users.utils'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst ProfileStatic=(props)=>{\r\n  const [isFriend,setFriendStatus]=useState(false)\r\n  useEffect(() => {\r\n    try{\r\n      async function newFunc(){\r\n        if(props.profile.name)\r\n        {\r\n        const a = await axios({url:`https://tweetit-react.herokuapp.com//friends/isfriend/${props.profile.name}`,headers:{'Authorization':`Bearer ${getJWT()}`}})\r\n        await  setFriendStatus(a.data.isfriend)\r\n      }\r\n        }\r\n        newFunc()\r\n    }\r\n    catch(e){\r\n      console.log(e.response)\r\n    }\r\n},[isFriend])\r\n    const onSendRequest= async ()=>{\r\n      try{\r\n        const res= await axios({url:`https://tweetit-react.herokuapp.com//add/friend/${props.profile.name}`,method:'POST',headers:{'Authorization':`Bearer ${getJWT()}`}})\r\n        setFriendStatus(true)      \r\n      }\r\n      catch(e){\r\n        console.log(e.response)\r\n      }\r\n    }\r\n    return(<div>\r\n     {props.profile.isMe?null:isFriend?null:<Button variant=\"outline-success\" onClick={()=>onSendRequest()}>SEND FRIEND REQUEST</Button>}\r\n      {Object.keys(props.profile).map((elem,index)=>{\r\n        if(['image','isme',\"private\",'temporaryimage'].includes(elem.toLowerCase()))\r\n        {\r\n            return\r\n        }\r\n        if(['aboutme'].includes(elem.toLowerCase()))\r\n        { return(props.profile[`aboutme`]?<form>\r\n        <div class=\"form-group row\">\r\n        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">About me</label>\r\n          <div class=\"col-sm-10\">\r\n          <textarea style={{height:'150px'}} disabled class=\"form-control\" id=\"exampleFormControlTextarea1\" value={props.profile[`aboutme`]}rows=\"3\"></textarea> </div>\r\n        </div>\r\n      </form>:null)\r\n        }\r\n        return(props.profile[elem]?<form>\r\n        <div class=\"form-group row\">\r\n        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">{elem.charAt(0).toUpperCase() + elem.slice(1)}</label>\r\n          <div class=\"col-sm-10\">\r\n            <input value={props.profile[elem]} type=\"text\" class=\"form-control\" id=\"inputPassword\" placeholder={ elem.charAt(0).toUpperCase() + elem.slice(1)}/>\r\n          </div>\r\n        </div>\r\n      </form>:null)\r\n    }).filter(elem=>elem)}\r\n    </div>)\r\n}\r\nexport default withRouter(ProfileStatic)","import { Button, Col, Container, FormFile, Image, InputGroup, Row } from 'react-bootstrap'\r\nimport { GET_IMAGE, UpdateSuccess, asyncGet } from '../../redux/profile/profile.actions'\r\nimport React, { useRef } from 'react'\r\nimport { getJWT, getUser } from '../../redux/users/users.utils'\r\n\r\nimport FormFileInput from 'react-bootstrap/esm/FormFileInput'\r\nimport InputSingle from '../../Components/input/inputGroup'\r\nimport ProfileComponents from '../../Components/updateProfile/updateProfile.components'\r\nimport ProfileStatic from '../../Components/profile/profile.static'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n// import * as svg1 from '../../assets/user.svg'\r\nclass  Profile extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fileToUpload:null,\r\n            imageURL:null,\r\n            disabled:false,\r\n            aboutMe:'',\r\n            static:true\r\n        }\r\n    }\r\n   async componentDidMount(){\r\n        let name=this.props.location.pathname.split('/')\r\n        await this.props.GET_DATA(name[2]);\r\n    }\r\n    async componentDidUpdate(prevProps){\r\n        if(this.props.location.pathname!=prevProps.location.pathname)\r\n        {\r\n            let name=this.props.location.pathname.split('/')\r\n            await this.props.GET_DATA(name[2])\r\n        }\r\n    }\r\n    fileChangedHandler =async(event) => {\r\n       try{ event.persist()\r\n        const file= event.target.files[0]\r\n        await this.setState({fileToUpload:file})  \r\n        const data = new FormData()\r\n        data.append('image', this.state.fileToUpload)\r\n       const post= await axios.post(\"https://tweetit-react.herokuapp.com//profile\", data,{ headers:{'Authorization':`Bearer ${getJWT()}`,\"Content-Type\": \"multipart/form-data\"}})\r\n       let name=this.props.location.pathname.split('/')\r\n        this.props.GET_DATA(name[2])\r\n        document.getElementById('input').value=''}\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }  \r\n\r\n    render(){\r\n        return(<div className=\"container\">\r\n            {this.props.profile?.name==getUser().username?<div className=\"custom-control custom-switch\" style={{marginRight:'auto'}}>\r\n                <button type=\"button\" class={this.state.static?\"btn btn-outline-primary\":\"btn btn-outline-secondary\"} onClick={()=>this.setState({static:!this.state.static})}>\r\n                {this.state.static?'UPDATE PROFILE':'GO BACK'}</button>\r\n            </div>:null}\r\n            \r\n            <Container style={{margin:'20px'}} >\r\n                    <Row>\r\n                    <Col xs={3} md={2}>\r\n                        <Image  src={this.props.profile\r\n                                    ?this.props.profile.temporaryImage\r\n                                        ?`data:image/jpeg;base64,${this.props.profile.temporaryImage}`\r\n                                        :this.props.profile.image && this.props.profile.name==getUser().username ?`data:image/jpeg;base64,${this.props.profile.image}`\r\n                                    :\"https://www.flaticon.com/svg/static/icons/svg/848/848006.svg\"\r\n                                    :\"https://www.flaticon.com/svg/static/icons/svg/848/848006.svg\"} roundedCircle />\r\n             {this.props.profile?this.props.profile?.isMe?<input onChange={this.fileChangedHandler} id=\"input\" type=\"file\"/>:null:null}\r\n                    </Col>\r\n                        <Col xs={6} md={4} style={{marginTop:'20px',marginLeft:'50px'}}>\r\n                    </Col>\r\n                    </Row>\r\n            </Container>\r\n           {this.props.profile?this.state.static?<ProfileStatic profile={this.props.profile}/>:<ProfileComponents {...this.props.profile}/>:null}                       \r\n        </div>)\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    profile:state.profile\r\n})\r\nconst dispatchStateToProps=dispatch=>({\r\n    GET_DATA:(name)=>dispatch(asyncGet(name)),\r\n    GET_IMAGE:()=>dispatch(GET_IMAGE()),\r\n    UpdateSuccess:(data)=>dispatch(UpdateSuccess(data))\r\n})\r\nexport default withRouter(connect(mapStateToProps,dispatchStateToProps)(Profile))","import React from 'react'\r\nimport { Button, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nconst SearchResultCard=(props)=>{\r\n   let {users}=props\r\n    return(users.map((elem,index)=>{\r\n        let image\r\n        if(elem.image){\r\n          image= btoa(String.fromCharCode(...new Uint8Array(elem.image.data)))\r\n        }\r\n        return( <div class=\"col-sm\" style={{marginTop:'10px',textAlign:'center'}}> <Card key={elem.name} style={{ width:`18rem` }}>\r\n        <Card.Img style={{width:'100px',height:'100px',marginLeft:'auto',marginTop:'10px',marginRight:'auto'}} variant=\"top\" src={elem.image?`data:image/jpeg;base64,${image}`:\"https://www.flaticon.com/svg/static/icons/svg/848/848006.svg\"} />\r\n        <Card.Body>\r\n          <Card.Title>{elem.name}</Card.Title>\r\n          <Card.Text>\r\n           {elem.email}\r\n          </Card.Text>\r\n         <Link to={`/profile/${elem.name}`} ><Button variant=\"primary\">Profile</Button></Link>\r\n        </Card.Body>\r\n      </Card></div>)\r\n  }))\r\n}\r\nexport default SearchResultCard","import { Button, Card, Image } from 'react-bootstrap'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport React from 'react'\r\n\r\nconst SearchResultTable=(props)=>{\r\n   let {users}=props\r\n    return(<table class=\"table table-hover\">\r\n    <thead>\r\n        <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">User</th>\r\n        <th scope=\"col\">Email</th>\r\n        </tr>\r\n    </thead>\r\n    {users.map((user,index)=>{\r\n        let image\r\n        if(user.image){\r\n          image= btoa(String.fromCharCode(...new Uint8Array(user.image.data)))\r\n        }\r\n        return(<tbody onClick={()=>props.history.push(`/profile/${user.name}`)}>\r\n            <tr>\r\n            <th scope=\"row\">{index+1}</th>\r\n            <td><Image roundedCircle style={{width:'50px',height:'50px'}} src={user.image?`data:image/jpeg;base64,${image}`:\"https://www.flaticon.com/svg/static/icons/svg/848/848006.svg\"}/>{` `+user.name+` `}</td>\r\n            <td>{user.email}</td>\r\n            </tr>\r\n        </tbody>)})}\r\n    </table>)\r\n}\r\nexport default withRouter(SearchResultTable)","import axios from 'axios'\r\nimport React from 'react'\r\n\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Button, Card } from 'react-bootstrap'\r\nimport Switch from 'react-bootstrap/esm/Switch'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect, withRouter } from 'react-router-dom'\r\nimport { ERROR_ADDING } from '../../redux/error/error.actions'\r\nimport { getJWT } from '../../redux/users/users.utils'\r\nimport SearchResultCard from '../cardSearch/card.searchResult'\r\nimport SearchResultTable from '../tableSearchResult/table.searchResult'\r\nconst SearchResults=(props)=>{\r\n  let [users,setUsers]=useState(null)\r\n  let [tabularForm,setTabular]=useState(true)\r\n  let name = props.location.pathname.split('/')\r\n  name=name[2]\r\n  useEffect(()=>{\r\n                if(props.location.state)\r\n                  {\r\n                    setUsers(props.location.state.users)\r\n                  }\r\n                else{\r\n                    handleSeached(name)\r\n                  }\r\n            },[props.location.pathname.split('/')[2]])\r\n  const handleSeached=async(name)=>{\r\n    const posted=await axios.get(`/username/${name}`,{ headers:{'Authorization':`Bearer ${getJWT()}`,\"Content-Type\": \"multipart/form-data\"}})\r\n    if(posted.status==200)\r\n    {\r\n      if(posted.data.users.length>0)\r\n      {\r\n        setUsers(posted.data.users)\r\n      }\r\n      else{\r\n        props.ERROR_ADDING({errors:[{error:'No user with related username !'}]})\r\n      }\r\n    }\r\n  } \r\n    return(users?<div className=\"container\">\r\n       <div className=\"custom-control custom-switch\" style={{marginLeft:'auto'}}>\r\n      <input type=\"checkbox\" value={tabularForm} onChange={()=>setTabular(!tabularForm)} className=\"custom-control-input\" id=\"customSwitch1\"/>\r\n<label className=\"custom-control-label\" for=\"customSwitch1\">{tabularForm?'Switch to Cards':'Switch to Tabular'}</label>\r\n    </div>\r\n    <div className=\"row\">\r\n        {users.length?tabularForm?<SearchResultTable users={users}/>:<SearchResultCard users={users}/>:null}\r\n     </div></div>:null)\r\n}\r\nconst dispatchStateToProps=dispatch=>({\r\n  ERROR_ADDING:(e)=>dispatch(ERROR_ADDING(e))\r\n})\r\nexport default connect(null,dispatchStateToProps)(SearchResults)","import {Button, Form} from 'react-bootstrap'\n\nimport {Link} from 'react-router-dom'\nimport React from 'react';\nimport { asyncLogIn } from '../../redux/users/users.actions';\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom'\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.props.LOGIN({email:this.state.email,password:this.state.password})\n  };\n  handleChange = event => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  };\n  handleOnclick=()=>{\n    this.props.history.push('/password/reset')\n  }\n  render() {\n    return (<Form>\n            <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control value={this.state.email} name='email' onChange={this.handleChange} type=\"text\" placeholder=\"Enter Email\"/>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control value={this.state.password} name='password' onChange={this.handleChange} type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n          <div>\n              <Button style={{display:'inline'}} onClick={this.handleSubmit} variant=\"outline-primary\" type=\"submit\">\n                Submit\n              </Button>\n              <Button onClick={this.handleOnclick} style={{display:'inline',marginLeft:'50px'}} variant=\"outline-danger\" type=\"submit\">\n                Forgot Password ?\n              </Button>\n          </div>\n        </Form>\n    );\n  }\n}\nconst mapDispatchToProps=dispatch=>({\n  LOGIN:user=>{dispatch(asyncLogIn(user))}\n})\nexport default withRouter(connect(null,mapDispatchToProps)(SignIn));","import React from 'react';\nimport { asyncSignUp } from '../../redux/users/users.actions';\nimport { connect } from 'react-redux';\nimport {Form,Button} from 'react-bootstrap'\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { username, email, password, confirmPassword } = this.state;\n    this.props.SIGN_UP({email,password,name:username,confirmPassword})\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return( <Form>\n      <Form.Group controlId=\"formBasicEmail\">\n      <Form.Label>Username</Form.Label>\n      <Form.Control value={this.state.username} name='username' onChange={this.handleChange} type=\"text\" placeholder=\"Enter Username\" />\n    </Form.Group>\n   <Form.Group >\n      <Form.Label>Email address</Form.Label>\n      <Form.Control value={this.state.email} name='email' onChange={this.handleChange} type=\"email\" placeholder=\"Enter email\" />\n     {/* { <Form.Text className=\"text-muted\">\n        We'll never share your email with anyone else.\n      </Form.Text>} */}\n    </Form.Group>\n    <Form.Group >\n      <Form.Label>Password</Form.Label>\n      <Form.Control value={this.state.password} name='password' onChange={this.handleChange} type=\"password\" placeholder=\"Password\" />\n    </Form.Group>\n    <Form.Group controlId=\"formBasicPassword\">\n      <Form.Label>Confirm Password</Form.Label>\n      <Form.Control value={this.state.confirmPassword} name='confirmPassword' onChange={this.handleChange} type=\"password\" placeholder=\"Password\" />\n    </Form.Group>\n    <Form.Group controlId=\"formBasicCheckbox\">\n      <Form.Check type=\"checkbox\" label=\"Check me out\" />\n    </Form.Group>\n    <Button onClick={this.handleSubmit} variant=\"outline-primary\" type=\"submit\">\n      Submit\n    </Button>\n  </Form>)\n  }\n}\nconst mapDispatchToProps=dispatch=>({\n  SIGN_UP:user=>{dispatch(asyncSignUp(user))}\n})\nexport default connect(null,mapDispatchToProps)(SignUp);","import React from 'react'\r\nimport {Col, Container, Row} from 'react-bootstrap'\r\nimport SignIn from '../signIn/signIn.component'\r\nimport SignUp from '../signUp/signUp.component'\r\nconst SignInAndSignOut=()=>{\r\n        return(<div>\r\n            <Container>\r\n                <Row>\r\n                    <Col><h1 style={{textAlign:'center',color:'#007BFF'}}>SIGN IN</h1><SignIn/></Col>\r\n                    <Col><h1 style={{textAlign:'center',color:'#007BFF'}}>SIGN UP</h1><SignUp/></Col>\r\n                </Row>\r\n           </Container>\r\n            </div>)\r\n    \r\n}\r\nexport default SignInAndSignOut","import React  from 'react'\r\nimport {Table} from 'react-bootstrap'\r\nconst OneTable =({array})=>{\r\n    return(<Table striped bordered hover style={{textAlign:'left'}}>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>{\"HashTag\".toUpperCase()}</th>\r\n            <th style={{textAlign:\"center\"}}>{\"Freqency\".toUpperCase()}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n           { array.map((elem,index)=>( <tr key={index}>\r\n                <td>{index+1}</td>\r\n                <td>{elem.hashtag}</td>\r\n                <td style={{textAlign:'center'}}>{elem.frequency}</td>\r\n            </tr>))}\r\n        </tbody>\r\n      </Table>)\r\n}\r\nexport default OneTable","import React from 'react'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nconst SpinnerValue=()=>{\r\n    return(<Spinner animation=\"border\" variant=\"dark\" role=\"status\" style={{margin:'auto',marginTop:'10%',textAlign:'center',width:window.innerWidth/6,height:window.innerWidth/6}}>\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </Spinner>)\r\n}\r\n export default SpinnerValue","import {Col, Container, Row, Spinner} from 'react-bootstrap'\r\n\r\nimport {Button} from 'react-bootstrap'\r\nimport OneTable from '../table/table'\r\nimport React from 'react'\r\nimport SpinnerValue from '../spinner/spinner'\r\nimport axios from 'axios'\r\nimport { get } from 'mongoose'\r\n\r\nclass TopTags extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            data:[],\r\n            loaded:false,\r\n            top:6\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        const getData = await axios({url:'/hashtags',method:'POST',data:{top:this.state.top}})\r\n        if(getData.status==200)\r\n        {\r\n            this.setState({data:getData.data.hashtags,loaded:true})\r\n        }\r\n    }\r\n    handleDataChange=async()=>{\r\n        await this.setState({top:this.state.top+6})\r\n        const getData = await axios({url:'/hashtags',method:'POST',data:{top:this.state.top}})\r\n        if(getData.status==200)\r\n        {\r\n            this.setState({data:getData.data.hashtags,loaded:true})\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>  \r\n                <Container>\r\n                    <Row>\r\n                        {!this.state.loaded?<SpinnerValue/>:<OneTable array={this.state.data}/> }   \r\n                    </Row>\r\n                  {!this.state.loaded?\r\n                    <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                        as=\"span\"\r\n                        animation=\"grow\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                        title=\"Loading\"\r\n                    />\r\n                        Loading...\r\n                    </Button>\r\n                    :this.state.data.length%6!==0\r\n                    ?null:<Button onClick={this.handleDataChange}variant=\"info\" >Load More</Button>}\r\n                </Container>\r\n            </div>)\r\n    }\r\n}\r\nexport default TopTags","import { Button, Card } from 'react-bootstrap'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nconst SingleCard=(props)=>{\r\n    const{caption,_id,text,image}=props.elem\r\n\r\n    const getHashtagsFromString=(givenArrayString)=>{\r\n        const arrayOfStrings = givenArrayString.split(' ')\r\n        const len=arrayOfStrings.length\r\n        let i=0\r\n        let hashtags=[]\r\n        for(i=0;i<len;i++)\r\n        {\r\n            if(arrayOfStrings[i][0]=='#')\r\n            {\r\n                hashtags.push(arrayOfStrings[i])\r\n            }\r\n        }\r\n        return hashtags\r\n    }\r\n    const Example = () => image.length>0?<Card.Img variant=\"top\" src={image!=''?`data:image/jpeg;base64,${image}`:\"https://react-bootstrap.netlify.app/logo.svg\"} />:null\r\n    return(<Card style={{ width: '18rem' ,marginRight:'auto',marginLeft:'auto',marginTop:'auto',marginBottom:'auto'}}  className=\"mx-auto my-2\">\r\n  \r\n  <Card.Body>\r\n      {Example()}\r\n    <Card.Title>{text}</Card.Title>\r\n    <Card.Text>\r\n      {caption}\r\n    </Card.Text>\r\n    {getHashtagsFromString(caption).map((elem,index)=><Link to=\"#\" key={index}>{' '+elem+' ' }</Link>)}\r\n    {/* <Button variant=\"primary\">Get frequency</Button> */}\r\n  </Card.Body>\r\n</Card>)\r\n}\r\nexport default  SingleCard","import { Container, Row } from 'react-bootstrap'\r\n\r\nimport React from 'react'\r\nimport SingleCard from '../card/card'\r\nimport SpinnerValue from '../spinner/spinner'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass YourTweet extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            loaded:false,\r\n            data:[]\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n            await this.trymakeRequest(8)\r\n    }\r\n    trymakeRequest=async(num)=>{\r\n        try {\r\n            let name = this.props.location.pathname.split('/')\r\n             const res = await axios({url:`http://https://tweetit-react.herokuapp.com//tweet/${name[1]}/all`, headers:{'Authorization':`Bearer ${this.props.user.token}`}})\r\n             if(res.status==200)\r\n            { \r\n                if(res.data.tweets[0])\r\n                {\r\n                    await this.setState({data:res.data.tweets[0].tweet})\r\n                    await this.setState({loaded:true})\r\n                }\r\n                else{\r\n                    await this.setState({data:[]})\r\n                    await this.setState({loaded:true})\r\n                }\r\n         }\r\n         else{\r\n             await this.makeRequest()\r\n         }}\r\n         catch(e){\r\n             console.log(e)\r\n         }\r\n     }\r\n    makeRequest=async()=>{\r\n       try {\r\n            const res = await axios({url:`http://https://tweetit-react.herokuapp.com//tweet/${this.props.user.username}/all`, headers:{'Authorization':`Bearer ${this.props.user.token}`}})\r\n            if(res.status==200)\r\n        {\r\n            await this.setState({data:res.data.tweets[0].tweet})\r\n           await this.setState({loaded:true})\r\n        }\r\n        else{\r\n            await this.makeRequest()\r\n        }}\r\n        catch(e){\r\n           console.log(e)\r\n        }\r\n    }\r\n    render(){\r\n        return(<div>\r\n            <Container>\r\n                <Row>\r\n                    {this.state.loaded?this.state.data.map((elem,index)=><SingleCard key={index} elem={elem} />):<SpinnerValue/>}\r\n                </Row>\r\n            </Container>\r\n        </div>)\r\n    }\r\n}\r\nconst mapStateToprops=(state)=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToprops)(withRouter(YourTweet))","import './App.css';\n\nimport {Alert, Spinner} from 'react-bootstrap'\nimport { ERROR_ADDING, ERROR_DELETING } from './redux/error/error.actions';\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { getJWT, getUser } from './redux/users/users.utils'\n\nimport EnterUsername from './Components/enterUsername/enter.username'\nimport FriendRequestSent from './Components/friendRequestSent/friendRequestSent'\nimport FriendsPage from './Pages/Friend/friends.page'\nimport Header from './Components/header/header.component'\nimport HomepageComponent from './Components/newTweet/newTweet'\nimport Messaging from './Components/messaging/messaging.component';\nimport MyFriends from './Components/my_friends/my_friends.component'\nimport NewPassword from './Components/newPassword/newPassword'\n// import OnlineSidebar from './Components/allOnline/oline.sidebar'\nimport Profile from './Pages/Profile/profile.page';\nimport SearchResults from './Components/search/searchResults';\nimport SignInAndSignOut from './Components/signInAndSignOut/signInAndSignOut.component';\nimport TopTags from './Components/TopTags/toptags.component';\nimport YourTweet from './Components/yourTweet/YourTweet'\nimport { asyncGet } from './redux/profile/profile.actions';\nimport { connect } from 'react-redux'\nimport io from 'socket.io-client';\n\nconst socket = io('https://tweetit-react.herokuapp.com/');\nlet e\nconst App= (props)=> { \n  window.addEventListener('beforeunload', function (e) {\n    if(props.currentUser)\n      {\n        socket.emit('REFRESHED',props.currentUser)\n      }  \n      delete e['returnValue'];\n  });\n  useEffect(()=>{\n    if(props.currentUser)\n    {\n      socket.emit('NEW_USER',props.currentUser)\n    }\n    return () => {\n      if(props.currentUser){\n        socket.emit('REFRESHED',props.currentUser)\n      }\n  }\n  })\n return (<div style={{size: '100%'}}>\n    <Header/>\n    <div className=\"container\" style={{marginTop:'10px'}}>\n      {props.errors?props.errors.errors.map((elem,idx)=> (<Alert key={idx} variant='danger' onClose={()=>{props.ERROR_DELETING()}} dismissible>\n      <b>{elem.error}</b>\n    </Alert>)):null}\n    </div>\n    <Switch>\n    <Route exact path='/friends/all'render={()=>props.currentUser?<MyFriends/>:<Redirect to=\"/login\"/>} />\n      <Route exact path='/' render={()=>props.currentUser?<HomepageComponent/>:<Redirect to='/login'/>}/>\n      <Route exact path='/login' render={()=>props.currentUser?<Redirect to='/'/>:<SignInAndSignOut/>}/>\n      <Route path=\"/toptags\" component={TopTags}/>\n      <Route path=\"/:username/all\" render={()=>props.currentUser?<YourTweet/>:<Redirect to=\"/login\"/>} />\n      <Route path=\"/search/:username\" render={(differentProps)=>props.currentUser?<SearchResults {...differentProps}/>:<Redirect to=\"/login\"/>} />\n      <Route path=\"/profile\" render={()=>props.currentUser?<Profile/>:<Redirect to=\"/login\"/>}/>\n      <Route exact path='/password/reset' component={EnterUsername}/>\n      <Route path='/password/reset/:token' component={NewPassword}/>\n      <Route path='/friend'render={()=>props.currentUser?<FriendsPage/>:<Redirect to=\"/login\"/>} />\n      <Route exact path='/message/:name'render={()=>props.currentUser?<Messaging/>:<Redirect to=\"/login\"/>} />\n      \n      </Switch>\n    </div>\n  );\n}\nconst mapStateToProps=(state)=>({\n  currentUser: state.user,\n  errors:state.errors\n})\nconst mapDispatchToProps =(dispatch)=>({\n  ERROR_DELETING:()=>dispatch(ERROR_DELETING()),\n  ERROR_ADDING:()=>dispatch(ERROR_ADDING()),\n  ASYNC_GET:(name)=>dispatch(asyncGet(name))\n})\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n","import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { persistor, store } from './redux/store';\n\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>\n  </React.StrictMode>\n      ,\n  document.getElementById('root')\n);\n// window.addEventListener(\"beforeunload\", (ev) => \n// {  \n//     ev.preventDefault();\n//     alert('closing')\n//     return ev.returnValue = 'Are you sure you want to close?';\n// });\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}